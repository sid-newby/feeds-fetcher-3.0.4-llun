<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>neizod's speculation</title>
    <description>insufficient data for meaningful answer</description>
    <link>https://neizod.dev/</link>
    <atom:link href="https://neizod.dev/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 02 Jan 2022 04:43:21 +0700</pubDate>
    <lastBuildDate>Sun, 02 Jan 2022 04:43:21 +0700</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>

      <item>
        <title>มาคำนวณจุดลากรองจ์อย่างง่ายกันเถอะ</title>
        <description>&lt;p&gt;เมื่อพูดถึงดาวเทียมที่มนุษยชาติส่งขึ้นไปยังอวกาศ เราคงมีภาพจำว่ามันมักโคจรที่รอบโลกเป็นวงกลมบ้างวงรีบ้าง ไม่งั้นก็อาจไปโคจรรอบดาวเคราะห์อื่นๆ หรือดวงอาทิตย์เป็นแน่ แต่ยังมีดาวเทียมอีกประเภทหนึ่งซึ่งถูกส่งไปโคจรรอบ&lt;a href=&quot;//en.wikipedia.org/wiki/Lagrange_point&quot;&gt;จุดลากรองจ์&lt;/a&gt; ซึ่งเป็นตำแหน่งสมมติที่ได้มาจากการคำนวณ เพราะในความเป็นจริงแล้วมันคือความว่างเปล่าในอวกาศไม่มีสิ่งใดให้ยึดเหนี่ยว!&lt;/p&gt;

&lt;p&gt;ในแง่หนึ่ง หากจะบอกว่าดาวเทียมเหล่านั้นโคจรรอบ&lt;em&gt;จุด&lt;/em&gt;ลากรองจ์ก็คงไม่ถูกเสียทีเดียว เพราะมันฉกฉวยใช้ประโยชน์จากระบบเทหวัตถุสองชิ้นที่โคจรรอบกัน โดยทั้งคู่นั้นต้องมีมวลมากกว่าตัวดาวเทียมมากๆ (เพื่อเลี่ยงความโกลาหลจาก&lt;a href=&quot;//en.wikipedia.org/wiki/Three-body_problem&quot;&gt;ปัญหาสามเทหวัตถุ&lt;/a&gt;) และหนึ่งในเทหวัตถุก็ควรมีมวลคิดเป็นเกือบทั้งหมดของระบบด้วย เช่น คู่เทหวัตถุโลก-ดวงจันทร์, ดวงอาทิตย์-โลก, ดวงอาทิตย์-ดาวพฤหัส โดยดาวเทียมจะไปโคจรรอบจุดศูนย์กลางมวลด้วยความเร็วเชิงมุมของระบบนั่นเอง&lt;/p&gt;

&lt;p&gt;แล้วการที่เราเอาดาวเทียมไปโคจรอยู่ ณ ตำแหน่งสมมติที่เป็นอวกาศว่างเปล่า วงโคจรของดาวเทียมเหล่านั้นจะไม่มีปัญหาด้านความเสถียรหรือ? เอาจริงก็พอมีปัญหาอยู่บ้างแต่นับว่าเบากว่าบริเวณอื่น เพราะว่าจุดลากรองจ์เป็นจุดที่เรา&lt;em&gt;เลือก&lt;/em&gt;ให้แรงต่างๆ หักล้างกันหมดพอดียังไงหละ&lt;/p&gt;

&lt;p&gt;ซึ่งแรงตัวแรกที่เราสนใจและรู้จักกันดีก็คงหนีไม่พ้นแรงโน้มถ่วง จาก&lt;a href=&quot;//en.wikipedia.org/wiki/Newton%27s_law_of_universal_gravitation&quot;&gt;กฎความโน้มถ่วงสากลของนิวตัน&lt;/a&gt; เราทราบว่าแรงโน้มถ่วงที่วัตถุสองชิ้นกระทำต่อกันนั้นมีขนาดเท่ากับ&lt;/p&gt;

\[F = \frac{Gm_1m_2}{r^2}\]

&lt;p&gt;เพราะว่าเรามีเทหวัตถุหลักสองตัวกระทำต่อดาวเทียม เราจึงมีแรงโน้มถ่วงสองแรง สนใจคู่เทหวัตถุดวงอาทิตย์-โลก ให้สัญลักษณ์ $\odot,\oplus,\varepsilon$ แทนดวงอาทิตย์ โลก และดาวเทียมตามลำดับ ดังนั้นเราจึงมี&lt;/p&gt;

\[F_\odot = \frac{Gm_\odot m_\varepsilon}{r_{\odot\varepsilon}^2}
\quad\quad\text{and}\quad\quad
F_\oplus = \frac{Gm_\oplus m_\varepsilon}{r_{\oplus\varepsilon}^2}\]

&lt;p&gt;เมื่อคำนึงถึงความเป็นเวกเตอร์ของแรง จะได้ว่าทิศทางของแรงโน้มถ่วงที่กระทำต่อดาวเทียมนั้นชี้พุ่งเข้าหาเทหวัตถุหลักชิ้นนั้นๆ&lt;/p&gt;

&lt;blockquote class=&quot;oversized figure&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/images/astronomy/lagrange-point/gravity-forces.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;แรงโน้มถ่วงจากดวงอาทิตย์ (ซ้าย) และจากโลก (ขวา) ต่อจุดต่างๆ – ภาพระยะห่างและมวลไม่ตรงสเกล&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;เนื่องจากระบบของเทหวัตถุคู่นี้มีความสมดุลจากการหมุนรอบตัวเอง เพื่อความเรียบง่ายเน้นไอเดียหลักของการคำนวณ เราจะถือว่าวงโคจรของคู่เทหวัตถุหลักนั้นเป็นวงกลมพอดี เลือก&lt;a href=&quot;//en.wikipedia.org/wiki/Barycenter&quot;&gt;จุดศูนย์กลางมวล&lt;/a&gt;เป็นจุดหมุนอ้างอิง จาก&lt;a href=&quot;//en.wikipedia.org/wiki/Kepler%27s_laws_of_planetary_motion&quot;&gt;กฎของเคปเลอร์&lt;/a&gt; ได้ว่าความเร็วเชิงมุมของระบบนั้นคำนวณได้จาก&lt;/p&gt;

\[\omega^2 = \frac{G(m_1+m_2)}{r^3}\]

&lt;p&gt;ซึ่งเมื่อเราพิจารณาผ่านกรอบอ้างอิงที่หมุนอยู่เช่นนี้แล้ว ก็จะมี&lt;a href=&quot;//en.wikipedia.org/wiki/Fictitious_force&quot;&gt;แรงเทียม&lt;/a&gt;โผล่เข้ามาด้วย แรงเทียมตัวแรกที่มีผลมากที่สุดคือ&lt;a href=&quot;//en.wikipedia.org/wiki/Centrifugal_force&quot;&gt;แรงเหวี่ยงหนีศูนย์กลาง&lt;/a&gt;แบบเรารู้สึกได้ตอนขับรถเข้าโค้งนั่นเอง แรงนี้จะกระทำต่อดาวเทียมตามระยะห่างจากจุดศูนย์กลางการหมุน โดยมีทิศทางเวกเตอร์ชี้ออกจากจุดนั้น และคำนวณขนาดได้เท่ากับ&lt;/p&gt;

\[F = m\omega^2r\]

&lt;p&gt;หรือเมื่อแทนค่า $\omega^2$ ในกรณีของดวงอาทิตย์-โลกลงไป จะได้&lt;/p&gt;

\[F_c = \frac{G(m_\odot + m_\oplus)rm_\varepsilon}{r_{\odot\oplus}^3}\]

&lt;blockquote class=&quot;oversized figure&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/images/astronomy/lagrange-point/centrifugal-force.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;แรงเหวี่ยงหนีศูนย์กลางของระบบดวงอาทิตย์-โลก ที่หมุนรอบจุดศูนย์กลางมวลของเทหวัตถุทั้งสอง&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;จริงๆ ยังมีแรงที่สำคัญอีกตัวที่ส่งผลต่อระบบเทหวัตถุที่หมุนรอบตัวเอง อันได้แก่&lt;a href=&quot;//en.wikipedia.org/wiki/Coriolis_force&quot;&gt;แรงคอริออลิส&lt;/a&gt;ซึ่งเป็นแรงเทียมที่คอยเบี่ยงเส้นทางของวัตถุที่โคจรเข้าหาหรือออกจากจุดศูนย์กลาง เหมือนกับตอนที่เมฆจากขั้วโลกเมื่อเคลื่อนที่เข้าหาเส้นศูนย์สูตรจะเบี่ยงไปไปทางทิศตะวันตกนั่นเอง แต่เนื่องจากจุดลากรองจ์ถูกออกแบบให้เป็นจุดที่หยุดนิ่งเมื่อเทียบกับระบบที่กำลังหมุน เราจึงสามารถตัดแรงนี้ทิ้งไปได้ในการคำนวณอย่างง่าย และจะได้ว่าจุดลากรองจ์คือจุดที่สมการนี้เป็นจริงนั่นเอง&lt;/p&gt;

\[\begin{equation}
\vec{F_\odot} + \vec{F_\oplus} + \vec{F_c} = 0
\label{eq:zero-force}
\end{equation}\]

&lt;blockquote class=&quot;oversized figure&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/images/astronomy/lagrange-point/force-field.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;สนามเวกเตอร์และคอนทัวร์แสดงผลรวมของแรงหลักทั้งสาม (คอนทัวร์นี้ต่างจากที่อื่นๆ ที่พล็อต&lt;a href=&quot;//en.wikipedia.org/wiki/Potential_energy&quot;&gt;พลังงานศักย์&lt;/a&gt;ซึ่งเป็นปริพันธ์ของแรง)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;จุด-l1-l2-l3&quot;&gt;จุด L1, L2, L3&lt;/h2&gt;

&lt;p&gt;อยากจะรู้ตำแหน่งเป๊ะๆ ของจุดลากรองจ์ก็ต้องแก้สมการเวกเตอร์ $\eqref{eq:zero-force}$ ซึ่งถ้าเราพิจารณาแบบเวกเตอร์เลยก็นับว่ายากอยู่ แต่เนื่องจากขนาดของแรงไม่ติดลบ เราจะลดรูปมาพิจารณากรณีที่แรงทั้งหมดอยู่บนเส้นตรงเดียวกันก่อน โจทย์ก็จะเหลือเพียงแค่ว่าแรงแต่ละแรงชี้ไปในทิศทางบวกหรือลบเท่านั้น ซึ่งก็คือเราจะแก้สมการในหน้าตาแบบนี้&lt;/p&gt;

\[\pm F_\odot \pm F_\oplus \pm F_c = 0\]

&lt;p&gt;โดยที่เครื่องหมาย $\pm$ ทั้งสามตัวจะเป็นบวกพร้อมกันสองตัวและตัวที่เหลือเป็นลบ เมื่อแทนวิธีคำนวณแรงต่างๆ ลงไปในสมการ จะเหลือว่า&lt;/p&gt;

\[\pm \frac{m_\odot}{r_{\odot\varepsilon}^2}
\pm \frac{m_\oplus}{r_{\oplus\varepsilon}^2}
\pm \frac{(m_\odot + m_\oplus)r}{r_{\odot\oplus}^3}
= 0\]

&lt;p&gt;ซึ่งเป็นพหุนามกำลังห้าทำให้ไม่มีวิธีหาคำตอบในรูปปิด แต่เราอาจเลือก $\alpha = m_\oplus/(m_\odot{+}m_\oplus)$ แล้วใช้เทคนิคประมาณค่าโดยคำนึงว่าสัดส่วน $\alpha$ มีค่าน้อยจนเข้าใกล้ศูนย์ เมื่อแก้สมการแต่ละชุดออกมาจะได้ว่าระยะทางจากจุดหมุนไปยังจุดลากรองจ์ต่างๆ มีค่าประมาณ&lt;/p&gt;

\[\frac{r}{r_{\odot\oplus}} \approx
\left(1-\sqrt[3]\frac\alpha3\right),\;\;
\left(1+\sqrt[3]\frac\alpha3\right),\;\;
\left(-1-\frac{5}{12}\alpha\right)\]

&lt;p&gt;ซึ่งเราเรียกชื่อจุดลากรองจ์แต่ละจุดนี้ว่า L1, L2, L3 ตามลำดับ โดยสองจุดแรกมีความสำคัญ คือ เป็นตำแหน่งสำหรับดาวเทียมหลายสิบดวงที่ต้องการสมบัติของการ&lt;em&gt;ไม่&lt;/em&gt;โคจรรอบโลก อาจจะเพื่อให้มองดวงอาทิตย์ได้ก่อนโลก มองโลกแบบที่มีแสงแดดตกกระทบตลอดเวลา หรือมองห้วงอวกาศลึกโดยไม่ต้องกลัวโลกมาบดบัง&lt;/p&gt;

&lt;h2 id=&quot;จุด-l4-และ-l5&quot;&gt;จุด L4 และ L5&lt;/h2&gt;

&lt;p&gt;แต่จุดลากรองจ์ไม่ได้มีอยู่แค่บนเส้นตรงเท่านั้น เพียงแต่ว่ามันยากที่จะแก้สมการเวกเตอร์เพื่อหาจุดอื่นๆ อันที่จริงแล้วถ้าดูตามประวัติศาสตร์ จุดลากรองจ์สามจุดแรกนั้นกลับถูกค้นพบก่อนโดย&lt;a href=&quot;//en.wikipedia.org/wiki/Leonhard_Euler&quot;&gt;ออยเลอร์&lt;/a&gt;ในปี 1765 แล้วถัดมาอีกไม่กี่ปี&lt;a href=&quot;//en.wikipedia.org/wiki/Joseph-Louis_Lagrange&quot;&gt;ลากรองจ์&lt;/a&gt;จึงแก้สมการหาอีกสองจุดที่เหลือได้ … ก็นับว่าเป็นโชคดีที่ออยเลอร์ไม่ได้ค้นพบครบทั้งห้าจุดและเหลือพื้นที่ให้ลากรองจ์ปรับปรุงทำงานเพิ่ม ไม่งั้นโลกคณิตศาสตร์คงมีของที่ห้อยชื่อออยเลอร์เพิ่มขึ้นอีกหนึ่งชิ้นให้เราๆ สับสนจนเรียกถูกเรียกผิดเล่น 🤪&lt;/p&gt;

&lt;p&gt;และถึงแม้ว่าการคำนวณตำแหน่งสองจุดนี้จะยุ่งยากกว่าสามจุดแรก แต่ข้อดีก็คือคราวนี้เราจะได้ตำแหน่งที่แม่นยำสวยงาม ไม่ใช่แค่ค่าประมาณที่มีข้อจำกัดด้านสัดส่วนมวลเหมือนที่ผ่านมา&lt;/p&gt;

&lt;blockquote class=&quot;oversized figure&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/images/astronomy/lagrange-point/potential-energy.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;จุดลากรองจ์ทั้งห้า คราวนี้พล็อตคอนทัวร์ด้วยพลังงานศักย์ $U \propto \frac{m_\odot}{r_{\odot\varepsilon}} + \frac{m_\oplus}{r_{\oplus\varepsilon}} + \frac{(m_\odot+m_\oplus)r^2}{2r_{\odot\oplus}^3}$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;สำหรับการคำนวณสองจุดที่เหลือ เราจะเริ่มจากการกลับไปวางพื้นฐานนิยามเวกเตอร์ต่างๆ อย่างรัดกุมก่อน ให้จุดศูนย์กลางมวลเป็นจุดหมุนของระบบที่ตำแหน่ง $\left[\begin{smallmatrix}0 \newline 0\end{smallmatrix}\right]$ เราจะนำดวงอาทิตย์และโลกไปวางไว้ยังตำแหน่ง $\vec{r}_o = \left[\begin{smallmatrix}x_o \newline 0\end{smallmatrix}\right]$ สำหรับ $o\in\lbrace\odot,\oplus\rbrace$ ที่สอดคล้องกับสมการนี้เพื่อให้จุดศูนย์กลางมวลอยู่ ณ จุดกำเนิด&lt;/p&gt;

\[\begin{equation}
m_\odot x_\odot + m_\oplus x_\oplus = 0
\label{eq:center-of-mass}
\end{equation}\]

&lt;p&gt;ให้ตำแหน่งต่างๆ ที่เราสนใจเขียนแทนด้วยเวกเตอร์ $\vec{r}=\left[\begin{smallmatrix}x \newline y\end{smallmatrix}\right]$ ดังนั้นจะได้ว่าระยะห่างระหว่างตำแหน่งที่สนใจไปยังเทหวัตถุแต่ละชิ้นคือ $r_o=\abs{\vec{r}-\vec{r}_o}$&lt;/p&gt;

&lt;p&gt;เมื่อต้องการเขียนสมการขนาดแรงโน้มถ่วงให้อยู่ในรูปเวกเตอร์ จะมีพจน์ที่เป็นเวกเตอร์หน่วยชี้เข้าหาเทหวัตถุติดเพิ่มเข้ามา ดังนั้นสมการจึงกลายเป็น&lt;/p&gt;

\[\vec{F}_o = \frac{Gm_om_\varepsilon}{\abs{\vec{r}_o-\vec{r}}^2}
            \frac{(\vec{r}_o-\vec{r})}{\abs{\vec{r}_o-\vec{r}}}\]

&lt;p&gt;ส่วนสมการขนาดแรงเหวี่ยงหนีศูนย์กลางนั้นมีขนาดของทิศทาง $r$ บ่งไว้อยู่แล้ว จึงแปลงเป็นเวกเตอร์ได้เลย&lt;/p&gt;

\[\vec{F}_c = \frac{G(m_\odot+m_\oplus)m_\varepsilon\vec{r}}{r_{\odot\oplus}^3}\]

&lt;p&gt;ดังนั้นผลรวมแรงจากสมการ $\eqref{eq:zero-force}$ จึงสามารถเขียนในรูปเวกเตอร์ของ $\vec{r}$ ได้ว่า&lt;/p&gt;

\[\frac{m_\odot}{r_{\odot\varepsilon}^3} (\vec{r}_\odot{-}\vec{r}) +
\frac{m_\oplus}{r_{\oplus\varepsilon}^3} (\vec{r}_\oplus{-}\vec{r}) +
\frac{(m_\odot{+}m_\oplus)}{r_{\odot\oplus}^3} \vec{r}
= 0\]

&lt;p&gt;โอเค หน้าตาสมการสวยดี และถ้าพยายามถึกแก้สมการไปก็อาจจะพบคำตอบ แต่ตัวเลขทื่อๆ ที่ได้มาอาจทำให้เราพลาดความเข้าใจเบื้องลึกเบื้องหลังไป เราจะใช้เทคนิค&lt;a href=&quot;//en.wikipedia.org/wiki/Change_of_basis&quot;&gt;เปลี่ยนฐานปริภูมิ&lt;/a&gt;เข้าช่วย โดยเลือกให้แกนหนึ่งนั้นขนานกับ $\vec{r}$ ส่วนอีกแกนก็ตั้งฉากไปเลย ซึ่งหนึ่งในวิธีที่ทำได้โดยง่ายก็คือ&lt;/p&gt;

\[\hat{u} = \begin{bmatrix}x \\ y\end{bmatrix}
\quad\quad\text{and}\quad\quad
\hat{v} = \begin{bmatrix}-y \\ x\end{bmatrix}\]

&lt;p&gt;การจะเขียนเวกเตอร์ $a\hat\imath+b\hat\jmath$ ให้อยู่ในรูป $c\hat{u}+d\hat{v}$ นั้นทำได้โดยนำอินเวอร์สของเมทริกซ์ฐานปริภูมิไปคูณกับเวกเตอร์ต้นทาง ดังนี้&lt;/p&gt;

\[\frac1{r^2}\begin{bmatrix} x &amp;amp; y \\ -y &amp;amp; x \end{bmatrix}
\begin{bmatrix} a \\ b \end{bmatrix} =
\begin{bmatrix} c \\ d \end{bmatrix}\]

&lt;p&gt;ข้อดีของการเลือกแปลงฐานเช่นนี้ คือ แรงเหวี่ยงหนีศูนย์กลางจะปรากฏแค่บนแกน $\hat{u}$ ทำให้ที่แกน $\hat{v}$ เหลือเพียงแรงโน้มถ่วงจากสองเทหวัตถุเท่านั้น ซึ่งจะเห็นได้จาก&lt;/p&gt;

\[\begin{array}{rcccrcr}
\vec{r}_\odot{-}\vec{r}
&amp;amp;=&amp;amp; \begin{bmatrix}x_\odot{-}x \\ -y\end{bmatrix}
&amp;amp;=&amp;amp; \left(\dfrac{xx_\odot}{r^2}-1\right)\hat{u} &amp;amp;-&amp;amp; \dfrac{yx_\odot}{r^2}\hat{v} \\
\vec{r}_\oplus{-}\vec{r}
&amp;amp;=&amp;amp; \begin{bmatrix}x_\oplus{-}x \\ -y\end{bmatrix}
&amp;amp;=&amp;amp; \left(\dfrac{xx_\oplus}{r^2}-1\right)\hat{u} &amp;amp;-&amp;amp; \dfrac{yx_\oplus}{r^2}\hat{v} \\
\vec{r}
&amp;amp;=&amp;amp; \begin{bmatrix}x \\ y\end{bmatrix}
&amp;amp;=&amp;amp; 1\;\hat{u} &amp;amp;+&amp;amp; 0\;\hat{v}
\end{array}\]

&lt;p&gt;ดังนั้นขนาดของแรงที่เหลืออยู่ตามแนวแกน $\hat{v}$ จึงแปรผันกับ&lt;/p&gt;

\[F_\perp \propto
  \frac{m_\odot}{r_{\odot\varepsilon}^3} \frac{yx_\odot}{r^2}
+ \frac{m_\oplus}{r_{\oplus\varepsilon}^3} \frac{yx_\oplus}{r^2}\]

&lt;p&gt;เราต้องการจุดที่หยุดนิ่งเทียบกับระบบ นั่นก็คือ $F_\perp = 0$ จึงทำให้สมการข้างต้นลดรูปเหลือ&lt;/p&gt;

\[0 = \frac{m_\odot x_\odot}{r_{\odot\varepsilon}^3}
  + \frac{m_\oplus x_\oplus}{r_{\oplus\varepsilon}^3}\]

&lt;p&gt;ระลึกถึงข้อจำกัดของสมการจุดศูนย์กลางมวล $\eqref{eq:center-of-mass}$ ดังนั้นจะได้ว่า $r_{\odot\varepsilon}=r_{\oplus\varepsilon}$ หรือก็คือจากจุดที่เสถียรไปยังดวงอาทิตย์และโลกนั้นต้องมีระยะห่างเท่ากัน เพื่อความสะดวก ต่อไปนี้จะเขียนแทนระยะทางดังกล่าวด้วย $r_\wedge$&lt;/p&gt;

&lt;p&gt;ย้อนกลับมาดูขนาดของแรงในแนวแกน $\hat{u}$ ซึ่งเป็นแกนที่ขนานไปกับ $\vec{r}$ จะได้ว่า&lt;/p&gt;

\[F_\parallel \propto
  \frac{m_\odot}{r_{\odot\varepsilon}^3} \left(\frac{xx_\odot}{r^2}-1\right)
+ \frac{m_\oplus}{r_{\oplus\varepsilon}^3} \left(\frac{xx_\oplus}{r^2}-1\right)
+ \frac{(m_\odot+m_\oplus)}{r_{\odot\oplus}^3}\]

&lt;p&gt;เช่นเดิม เราสนใจกรณีที่ $F_\parallel=0$ ดังนั้น&lt;/p&gt;

\[\begin{align*}
0 &amp;amp;= \frac{m_\odot}{r_\wedge^3} \left(\frac{xx_\odot}{r^2}-1\right)
   + \frac{m_\oplus}{r_\wedge^3} \left(\frac{xx_\oplus}{r^2}-1\right)
   + \frac{(m_\odot+m_\oplus)}{r_{\odot\oplus}^3} \\
  &amp;amp;= \left( \frac{m_\odot+m_\oplus}{r_{\odot\oplus}^3}
          - \frac{m_\odot+m_\oplus}{r_\wedge^3} \right)
   + \frac{x}{r^2r_\wedge^3} (m_\oplus x_\oplus + m_\odot x_\odot)
\end{align*}\]

&lt;p&gt;จะเห็นว่าพจน์หลังนั้นกลับมาเข้าข้อจำกัดของ $\eqref{eq:center-of-mass}$ อีกครั้ง ถึงตรงนี้เราก็จะเหลือแค่&lt;/p&gt;

\[0 = \frac{m_\odot+m_\oplus}{r_{\odot\oplus}^3} - \frac{m_\odot+m_\oplus}{r_\wedge^3}\]

&lt;p&gt;ซึ่งก็คือ $r_\wedge = r_{\odot\oplus} = r_{\odot\varepsilon} = r_{\oplus\varepsilon}$ หรือตีความได้ว่าจุดลากรองจ์แต่ละจุดที่เหลือนี้ จะต้องอยู่บนยอดหนึ่งของรูป&lt;a href=&quot;//en.wikipedia.org/wiki/Equilateral_triangle&quot;&gt;สามเหลี่ยมด้านเท่า&lt;/a&gt;ที่จุดยอดอื่นๆ คือดวงอาทิตย์กับโลกนั่นเอง!&lt;/p&gt;

&lt;p&gt;สมบัติสำคัญของ L4 กับ L5 คือการเป็นจุดเสถียร แม้จากพล็อตพลังงานศักย์จะบอกว่ามันอยู่บนยอดเขาก็ตาม แต่เพราะเมื่อวัตถุเคลื่อนที่ออกห่างจุดนี้แล้วแรงคอริออลิสจะคอยผลักมันกลับเข้าไปวนเวียนอยู่ในบริเวณดังกล่าว ต่างจากจุด L1 L2 L3 ที่อยู่บน&lt;a href=&quot;//en.wikipedia.org/wiki/Saddle_point&quot;&gt;อานม้า&lt;/a&gt;ที่พร้อมจะไหลเข้าไปหาดวงอาทิตย์หรือโลกได้ง่ายๆ ดาวเทียมบนจุดอานม้าจึงต้องคอยเผาเชื้อเพลงเพื่อปรับเส้นทางเป็นระยะๆ นั่นเอง&lt;/p&gt;

&lt;p&gt;สำหรับระบบดวงอาทิตย์-โลก จุดลากรองจ์ที่อยู่บนยอดสามเหลี่ยมอาจส่งผลไม่ชัดเท่าไหร่ อาจเพราะมวลที่แตกต่างกันมากๆ จนจุดศูนย์กลางมวลกับจุดศูนย์กลางดวงอาทิตย์แทบจะเป็นจุดเดียวกัน แต่หากไปมองคู่ดวงอาทิตย์-ดาวพฤหัสแล้วจะเห็นว่าจุดนี้มีบทบาทเด่นชัดในธรรมชาติ ซึ่งเป็นบริเวณที่เราจะพบดาว&lt;a href=&quot;//en.wikipedia.org/wiki/Jupiter_trojan&quot;&gt;เคราะห์น้อย&lt;/a&gt;โคจรอยู่ก่อนหน้าหรือตามหลังดาวพฤหัสในมุม $60^\circ$ เป็นจำนวนมาก … มากเสียจนเอาชื่อทหารใน&lt;a href=&quot;//en.wikipedia.org/wiki/Trojan_War&quot;&gt;สงครามกรุงทรอย&lt;/a&gt;มาตั้งก็ยังไม่พอเลยหละ 😅&lt;/p&gt;

&lt;blockquote class=&quot;figure&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/images/astronomy/lagrange-point/jupiter-trojan.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;ดาวเคราะห์น้อยรอบดาวพฤหัส ซึ่งกระจุกตัวตามจุดลากรองจ์ต่างๆ – ภาพจาก &lt;a href=&quot;//twitter.com/pscheirich&quot;&gt;Petr Scheirich&lt;/a&gt; ผ่าน &lt;a href=&quot;//leancrew.com/all-this/2016/08/lagrange-points-redux/&quot;&gt;leancrew.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ก็น่าสนใจว่าในความว่างเปล่ามืดมิดไร้ซึ่งสิ่งใด บางครั้งมันก็ไม่ได้ไร้ซึ่งความสำคัญไปเสียทีเดียว อย่างเช่นการเป็นจุดสมดุลแห่งพลังทั้งหลายแบบจุดลากรองจ์เหล่านี้&lt;/p&gt;

&lt;h2 id=&quot;อ้างอิง&quot;&gt;อ้างอิง&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;NASA: &lt;a href=&quot;https://www.nasa.gov/topics/universe/features/webb-l2.html&quot;&gt;‘L2’ Will be the James Webb Space Telescope’s Home in Space&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Scott Manley: &lt;a href=&quot;https://www.youtube.com/watch?v=7PHvDj4TDfM&quot;&gt;What Makes Lagrange Points Special Locations In Space&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Neil J. Cornish: &lt;a href=&quot;https://map.gsfc.nasa.gov/ContentMedia/lagrange.pdf&quot;&gt;The Lagrange Points&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Dennis Westra: &lt;a href=&quot;https://www.mat.univie.ac.at/~westra/lagrangepoints.pdf&quot;&gt;Lagrangian Points&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;3Blue1Brown: &lt;a href=&quot;https://youtu.be/P2LTAUO1TdA&quot;&gt;Change of basis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;/scripts/draw_lagrange_point.py&quot;&gt;สคริปต์ Python&lt;/a&gt; สำหรับสร้างภาพสนามเวกเตอร์และคอนทัวร์ประกอบบทความนี้ &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 01 Jan 2022 17:05:05 +0700</pubDate>
        <link>https://neizod.dev/2022/01/01/simple-lagrange-point-calculation.html</link>
        <guid isPermaLink="true">https://neizod.dev/2022/01/01/simple-lagrange-point-calculation.html</guid>

        <category>Astronomy</category>

        <category>Geometry</category>

        <category>Linear Algebra</category>

        <category>Physics</category>


      </item>

      <item>
        <title>別の人の彼女になったよ</title>
        <description>&lt;p&gt;เพลงจาก wacci “คนอื่นไกลเค้าได้ใจฉันไปไว้ครอบครองแล้วหละ” ที่แค่ชื่อเพลงก็แสนจะบาดลึก พร้อมทั้งทำให้เราคาดเดาเนื้อเพลงต่อไปว่า “โปรดมอบใจเธอให้ใครคนอื่นเสียที” แล้วท่อนนั้นมันก็ดังขึ้นมาจริงๆ!!&lt;/p&gt;

&lt;iframe width=&quot;853&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/sEJKG60a1Zc&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;เอาเวอร์ชันคัพเวอร์มาลง เพราะถ้าดูตามเนื้อเพลงจริงๆ แล้วคือเป็นการเล่าเรื่องผ่านมุมมองของผู้หญิง เพราะงั้นให้ผู้หญิงร้องน่าจะเหมาะกว่า (โทษทีนะ wacci ไม่ใช่ว่าเวอร์ชันต้นฉบับของนายไม่ดีนะ จริงๆ แล้วมันดีมากเลย แต่ยังไงก็รู้สึกว่ามันดีได้ไม่เท่ากับให้ผู้หญิงร้องอยู่ดี ถถถถถ)&lt;/p&gt;

&lt;p&gt;เพลงเปิดด้วย&lt;a href=&quot;//en.wikipedia.org/wiki/Motif_(music)&quot;&gt;โมทีฟ&lt;/a&gt; &lt;img src=&quot;/images/note/betsu-no-hito/1-betsu-kanojo.png&quot; alt=&quot;&quot; class=&quot;inlinenote&quot; /&gt; ที่เราจะได้ยินมันย้ำซ้ำๆ ตั้งแต่เริ่มจนจบ ท่อนนี้ถูกใส่เนื้อร้องตามชื่อเพลงว่า &lt;ruby&gt;&lt;rb&gt;別&lt;/rb&gt;&lt;rt&gt;べつ&lt;/rt&gt;&lt;/ruby&gt;の&lt;ruby&gt;&lt;rb&gt;人&lt;/rb&gt;&lt;rt&gt;ひと&lt;/rt&gt;&lt;/ruby&gt;の&lt;ruby&gt;&lt;rb&gt;彼女&lt;/rb&gt;&lt;rt&gt;かのじょ&lt;/rt&gt;&lt;/ruby&gt;になったよ ด้วยจำนวนพยางค์เกินสิบและเสียงซ้ำกันจำนวนมากในห้วงเวลาอันสั้น ทำให้แค่จะอ่านตามอย่างถูกต้องลิ้นไม่พันกันก็ยังไม่ใช่เรื่องง่ายเลย แต่มันกลับถูกร้องด้วยโน้ตตัวเดียวซ้ำๆ เกือบทั้งท่อน จะมีก็เพียงแต่ตอนใกล้จบเท่านั้นที่มีการเคลื่อนไหวโน้ตแบบขึ้น-ลง-ลง ซึ่งเป็นการจงใจแสดงถึงความเรียบเฉยไร้อารมณ์ ว่ามันไม่ได้ยากเลยที่จะเอ่ยประโยคเหล่านี้ออกมา&lt;/p&gt;

&lt;p&gt;ท่อนถัดมาเป็นการพูดถึงข้อเสียของคนรักเก่าเชิงเปรียบเทียบกับเค้าคนใหม่ โดยเพลงได้นำโมทีฟตั้งต้นมาพัฒนา แต่โดยรวมแล้วยังคงรูปแบบที่ซ้ำโน้ตอยู่ไม่กี่ตัว เพื่อตอกย้ำว่าเรื่องในอดีตมันไม่ได้มีผลต่อจิตใจเธอแล้ว … แต่ไม่นานเพลงก็เริ่มมีการเปลี่ยนแปลงอย่างชัดเจน เมื่อเธอหันไปกล่าวถึงความดีงามเพอร์เฟกต์ของแฟนใหม่ &lt;ruby&gt;&lt;rb&gt;余裕&lt;/rb&gt;&lt;rt&gt;よゆう&lt;/rt&gt;&lt;/ruby&gt;があって&lt;ruby&gt;&lt;rb&gt;大人&lt;/rb&gt;&lt;rt&gt;おとな&lt;/rt&gt;&lt;/ruby&gt;で &lt;img src=&quot;/images/note/betsu-no-hito/2-yoyuu-otona.png&quot; alt=&quot;&quot; class=&quot;inlinenote&quot; /&gt; ผ่านการร้องโน้นคู่ที่กระโดดขึ้นไปหนึ่ง&lt;a href=&quot;//en.wikipedia.org/wiki/Octave&quot;&gt;ขั้นคู่แปดเพอร์เฟกต์&lt;/a&gt;พอดี พร้อมกับโน้ตถัดๆ มาที่มีการเคลื่อนไหวมากขึ้น ไม่ย้ำซ้ำอยู่ที่โน้ตเดิมอีกต่อไป ยิ่งพูดถึงเค้าเท่าไหร่เสียงเธอก็ยิ่งมีพลังและไต่ระดับโน้ตสูงขึ้นไปเรื่อยๆ&lt;/p&gt;

&lt;p&gt;แล้วอารมณ์เพลงก็มาถึงจุดปะทุ เมื่อเธอได้กล่าวขอโทษคนรักเก่าพร้อมบอกว่าเราสองไม่ควรมาพบกันอีกต่อไป だからもう&lt;ruby&gt;&lt;rb&gt;会&lt;/rb&gt;&lt;rt&gt;あ&lt;/rt&gt;&lt;/ruby&gt;えないや ごめんね โดยร้องผ่านเมโลดี้ &lt;img src=&quot;/images/note/betsu-no-hito/3-dakara-gomen.png&quot; alt=&quot;&quot; class=&quot;inlinenote&quot; /&gt; ที่เพลงแอบ&lt;a href=&quot;//en.wikipedia.org/wiki/Foreshadowing&quot;&gt;โรยเกล็ดขนมปังปูทาง&lt;/a&gt;ไว้ตลอดทั้งเพลง ซึ่งเริ่มจากการพลิกผันโมทีฟคอนทัวร์ กลับหลังมาหน้าและพลิกบนลงล่าง เพื่อบอกถึงการลืมเรื่องเก่าพร้อมก้าวไปข้างหน้า แล้วตามด้วยโน้ตที่เคลื่อนไหวไม่หยุดนิ่ง ดั่งความรู้สึกที่เปี่ยมล้นออกมาของเธอนั่นเอง&lt;/p&gt;

&lt;p&gt;ท่อนสำคัญต่อมา จึงหนีไม่พ้นการเริ่มย้อนเมโลดี้ที่ผ่านเพิ่งผ่าน &lt;img src=&quot;/images/note/betsu-no-hito/4-anata-hayaku.png&quot; alt=&quot;&quot; class=&quot;inlinenote&quot; /&gt; ที่บอกให้เขาเร่งรีบขึ้นหน่อย あなたも&lt;ruby&gt;&lt;rb&gt;早&lt;/rb&gt;&lt;rt&gt;はや&lt;/rt&gt;&lt;/ruby&gt;くなってね แล้วจึงตามด้วยบทสรุป &lt;img src=&quot;/images/note/betsu-no-hito/5-betsu-kareshi.png&quot; alt=&quot;&quot; class=&quot;inlinenote&quot; /&gt; ที่ร้องอย่างเจียนขาดใจว่า 別の人の&lt;ruby&gt;&lt;rb&gt;彼氏&lt;/rb&gt;&lt;rt&gt;かれし&lt;/rt&gt;&lt;/ruby&gt;に ตามที่เราได้คาดเดาไว้ในตอนแรกนั่นเอง&lt;/p&gt;

&lt;p&gt;เพราะบทเพลงก็คือการบริหารความคาดหวังของคนฟังว่าเราอยากได้ยินอะไรต่อไป เหมือนกับที่เธอคาดหวังไว้ให้เขาตัดใจไปจากเธอนั่นเอง … เพราะไม่เช่นนั้นแล้ว จะกลับกลายเป็นเองเธอนั่นแหละ ที่หักห้ามใจไม่ไหวจนต้องยกโทรศัพท์กดหาเขาอีกครั้ง &lt;ruby&gt;&lt;rb&gt;私&lt;/rb&gt;&lt;rt&gt;わたし&lt;/rt&gt;&lt;/ruby&gt;が&lt;ruby&gt;&lt;rb&gt;電話&lt;/rb&gt;&lt;rt&gt;でんわ&lt;/rt&gt;&lt;/ruby&gt;をしちゃう&lt;ruby&gt;&lt;rb&gt;前&lt;/rb&gt;&lt;rt&gt;まえ&lt;/rt&gt;&lt;/ruby&gt;に &lt;img src=&quot;/images/note/betsu-no-hito/6-watashi-mae.png&quot; alt=&quot;&quot; class=&quot;inlinenote&quot; /&gt;&lt;/p&gt;

&lt;style&gt;
.inlinenote { display: inline-block; vertical-align: middle; height: 3em; }
&lt;/style&gt;

</description>
        <pubDate>Fri, 24 Dec 2021 21:57:29 +0700</pubDate>
        <link>https://neizod.dev/2021/12/24/i-have-become-someone-elses-girlfriend.html</link>
        <guid isPermaLink="true">https://neizod.dev/2021/12/24/i-have-become-someone-elses-girlfriend.html</guid>

        <category>Japanese</category>

        <category>Song</category>

        <category>Musical Analysis</category>


      </item>

      <item>
        <title>$\frac12 &lt; \lfloor\bmod(\lfloor\frac{y}{17}\rfloor 2^{-17\lfloor x\rfloor-\bmod(\lfloor y\rfloor,17)}, 2) \rfloor$</title>
        <description>&lt;p&gt;(อ)สมการสุดมหัศจรรย์ที่เหล่าเนิร์ดคณิตศาสตร์คลั่งไคล้ หนึ่งในนั้นคงจะมี&lt;a href=&quot;//en.wikipedia.org/wiki/Tupper%27s_self-referential_formula&quot;&gt;สูตรของ Tupper&lt;/a&gt; อยู่ในอ้อมอกอ้อมใจของใครหลายคนเป็นแน่ เพราะเมื่อพล็อตกราฟสูตรดังกล่าวออกมาดูแล้วจะพบว่ามันมีหน้าตาดังนี้&lt;/p&gt;

&lt;blockquote class=&quot;oversized figure&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/images/math/tupper/formula.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ซึ่งก็คือสูตรของ&lt;a href=&quot;//en.wikipedia.org/wiki/Self-reference&quot;&gt;ตัวมันเอง&lt;/a&gt;ยังไงหละ!!!&lt;/p&gt;

&lt;p&gt;แต่ความมหัศจรรย์ที่ไร้คำอธิบายก็คงกลายเป็นไสยศาสตร์ของขลังที่ห้ามต้องแตะ เพราะงั้นเรามาแกะอสมการนี้ดูกันดีกว่าว่ามันทำงานยังไง&lt;/p&gt;

&lt;p&gt;ก่อนอื่นสังเกตว่าอสมการดังกล่าวมีตัวเลขแปลกปลอมที่ไม่ควรจะเห็นบ่อยๆ ซึ่งก็คือ $17$ ที่ปรากฏถึงสามครั้ง เลขนี้มันหมายความว่ายังไงกันนะ?&lt;/p&gt;

&lt;p&gt;เริ่มจากค่า $17$ ตัวแรกที่เห็นใน $\lfloor\frac{y}{17}\rfloor$ ถ้าเราลองแทนค่า $y$ บางค่าดู จะเห็นว่าผลลัพธ์ย่อยแค่ส่วนนี้จะถูกแบ่งออกเป็นช่วงๆ ตามค่า $y$ โดยแต่ละช่วงมีความกว้าง $17$ หน่วย (เช่น ช่วงของ $0 \le y \lt 17$ นั้นให้ผลลัพธ์เท่ากับ $0$ เหมือนกันหมด) ซึ่งก็คือถ้าเราอยากเห็นผลลัพธ์ที่แตกต่างออกไป ก็ต้องเปลี่ยนค่า $y$ ไปครั้งละ $17$ หน่วย&lt;/p&gt;

&lt;p&gt;ต่อมาข้ามไปดู $17$ ตัวท้ายสุด $\bmod(\lfloor y\rfloor, 17)$ คราวนี้ถ้าลองไล่แทนค่า $y$ แบบเดิมดู จะกลายเป็นว่าผลลัพธ์ย่อยให้ค่าแตกต่างกันออกไปในแต่ละช่วงของ $y$ แล้ว อย่างไรก็ตามหากเปลี่ยนค่า $y$ แบบก้าวกระโดดข้ามช่วงครั้งละ $17$ หน่วย จะกลายเป็นเห็นผลลัพธ์ซ้ำตรงกับของเดิมพอดี&lt;/p&gt;

&lt;p&gt;ซึ่งก็คือสูตรนี้ใบ้เราว่า ให้เราพล็อตกราฟตามแกน $Y$ สูงครั้งละ $17$ หน่วย และเราสามารถ “ดึง” เอาค่า $y$ ออกมาใช้งานต่อได้ โดยเราจะแบ่งมันออกเป็นสองส่วน ได้แก่ ส่วนของ&lt;a href=&quot;//en.wikipedia.org/wiki/Quotient&quot;&gt;จำนวนเต็ม&lt;/a&gt; $q$ กับส่วนของ&lt;a href=&quot;//en.wikipedia.org/wiki/Remainder&quot;&gt;เศษเหลือ&lt;/a&gt; $r$ ซึ่งคำนวณผ่านการนำ $\lfloor y\rfloor$ ไปหารด้วย $17$ นั่นเอง&lt;/p&gt;

&lt;p&gt;ย้อนกลับมาดูค่า $17$ ตัวตรงกลางที่เมื่อกี้ข้ามไป คราวนี้ดูทั้ง $-17\lfloor x\rfloor -r$ อย่าลืมว่า $r$ เป็นจำนวนเต็มที่ $0 \le r \lt 17$ นี่เป็นการบอกคร่าวๆ ว่าเราจะพยายามประกอบร่างตัวเลขใหม่ขึ้นมาให้มันครอบคลุมเซตของจำนวนเต็มทั้งหมด&lt;/p&gt;

&lt;p&gt;และเมื่อถอยออกมามองภาพรวมของทั้งอสมการ โดยมองผ่านแว่นตาโปรแกรมเมอร์ที่ทำงานบนเลขฐานสอง จะเห็นว่า $2^{-p}$ ก็คือการเลื่อนบิตไปทางขวาเป็นจำนวน $p$ ครั้ง ส่วน $\bmod(n,2)$ คือการเก็บบิตที่มีค่าต่ำสุดมาใช้คำนวณต่อ รวมกันแล้วก็คือเราต้องการแค่ไล่เช็คว่าแต่ละบิตใน $q$ มีค่าเป็น &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; หรือ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; เท่านั้นแหละ (แต่ต้นทางเขียนเป็นภาษาคณิตศาสตร์ผ่านอสมการการหาค่าเท็จ/จริงด้วย $\frac12 &amp;lt; \lfloor\cdots\rfloor$ ไปงั้น) โดยเราสร้างดัชนีว่าต้องการชี้ไปที่บิตที่เท่าไหร่ ผ่านการเอา $x$ กับ $y$ มายำกัน โดยแทรกค่า $q$ แฝงไว้กับตัวแปร $y$ นั่นเอง&lt;/p&gt;

&lt;p&gt;นี่หมายความว่าอสมการข้างต้นมันก็ไม่ได้วิเศษมหัศจรรย์อะไรขนาดนั้น เพราะมันก็เป็นเพียงแค่การ enumerate การพล๊อตภาพที่มีความสูง $17$ หน่วย (และยาวเท่าไหร่ก็ได้) ทุกรูปแบบ ซึ่งภาพผลลัพธ์ก็จะขึ้นกับค่าตั้งต้น $q$ โดยไล่พล็อตบิตที่มีค่าต่ำสุดเป็นพิกเซลเริ่มที่มุมบนซ้าย บิตถัดมาจะไล่ลงไปตามแกน $Y$ เรื่อยๆ จนเมื่อแถวแนวตั้งไล่เลขครบ $17$ บิต ก็จะวนกลับขึ้นไปที่ด้านบนสุดพร้อมขยับในแนวแกน $X$ ไปทางขวา $1$ หน่วย ไล่พล็อตลงล่างจนครบอีกแล้วค่อยๆ ขยับวนไปทางขวาเรื่อยๆ นั่นเอง&lt;/p&gt;

&lt;blockquote class=&quot;oversized figure&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/images/math/tupper/grid.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;ดัชนีตำแหน่งของพิกเซลตัวอย่างบางพิกเซล กริดถูกกลับด้านซ้ายขวาเพื่อความสะดวกในการพล็อตแล้ว&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ดังนั้นคำถามจริงๆ แล้วก็คือเราต้องการค่า $q=\lfloor\frac{y}{17}\rfloor$ เท่าไหร่เพื่อให้ได้ภาพนั้นกันหละ? ตรงนี้ไม่ใช่งานยากแล้ว แต่เป็นงานถึกแทนเพราะเราก็แค่ไล่ออกแบบว่าต้องเปิดปิดพิกเซลไหนบ้าง แล้วก็เอาข้อมูลนั้นมาร้อยเรียงเป็นตัวเลขฐานสองก็เสร็จสิ้น ซึ่งอันที่จริงก็ยังทำได้อีกหลายวิธีมากๆ แต่ใน&lt;a href=&quot;//dl.acm.org/doi/abs/10.1145/383259.383267&quot;&gt;เปเปอร์ต้นทาง&lt;/a&gt; (ที่พล็อตแบบสลับด้านแกน $X$) ได้ให้ค่าดังกล่าว (ผ่าน $k=17q$) ไว้ดังนี้&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;960939379918958884971672962127852754715004339660129306651505519271702802395266424689642842174350718121267153782770623355993237280874144307891325963941337723487857735749823926629715517173716995165232890538221612403238855866184013235585136048828693337902491454229288667081096184496091705183454067827731551705405381627380967602565625016981482083418783163849115590225610003652351370343874461848378737238198224849863465033159410054974700593138339226497249461751545728366702369745461014655997933798537483143786841806593422227898388722980000748404719&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;อยากลองเขียนเป็นโค้ด? ระวังแค่ว่าเราต้องทำงานกับตัวเลขขนาดใหญ่มากๆ เพราะนอกจากนั้นก็สามารถลดทอนสูตรข้างต้นลงเหลือเป็นโค้ดง่ายๆ ด้วยการเลื่อนบิตได้ ดังนี้&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;divmod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;reversed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;106&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' ▉'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;แน่นอนว่าเราสามารถเปลี่ยนค่า &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;k&lt;/code&gt; เป็นค่าอื่นๆ ที่น่าสนใจได้ เช่น&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;170858557905417978829128239217472162595935968217581069913375205865507367098696572969412461203905446736829218392208338571960279757975859129905839246398599551621608122760168639833583668823268921595150138422041159186319904285738876312105490036626126625434233371834068102168151195388648336791737005908097051895327223087808210533698779397593282595308903423967833321275846479666744055562498990116313304186617099314453030594456329178305520016813652088351091914667354339386586899688883613271898627584622833793175814504438167116064138379119153417619&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sat, 18 Dec 2021 07:33:44 +0700</pubDate>
        <link>https://neizod.dev/2021/12/18/tupper-quine-formula.html</link>
        <guid isPermaLink="true">https://neizod.dev/2021/12/18/tupper-quine-formula.html</guid>

        <category>Mathematics</category>

        <category>Programming</category>

        <category>Recursion</category>

        <category>One-Liner</category>

        <category>Python</category>


      </item>

      <item>
        <title>เร็วขึ้นอีกสิเจ้าแฟกทอเรียล!</title>
        <description>&lt;p&gt;นิยาม&lt;a href=&quot;//en.wikipedia.org/wiki/Factorial&quot;&gt;แฟกทอเรียล&lt;/a&gt;นั้นเรียบง่ายจนใครๆ ก็สามารถ implement ตามได้ สมมติต้องการ $20!$ เราก็แค่คำนวณ&lt;/p&gt;

\[20! = 1 \times 2 \times 3 \times \cdots \times 20\]

&lt;p&gt;วิเคราะห์แบบหยาบๆ อัลกอริทึมนี้จับตัวเลขมาคูณกันมากที่สุด $n$ ครั้ง คำถามคือเราจะทำได้เร็วกว่านี้อีกมั้ย?&lt;/p&gt;

&lt;p&gt;สังเกตว่าถ้าเราแบ่งลำดับการคูณของตัวเลขจำนวณคู่และจำนวณคี่ออกจากกัน เราจะเห็นแพทเทิร์นที่คุ้นหน้าคุ้นตาขึ้นมาทันที&lt;/p&gt;

\[\begin{align}
20! &amp;amp;= (1 \times 3 \times 5 \times 7 \times 9 \times 11 \times 13 \times 15 \times 17 \times 19) \;\times \\
    &amp;amp;\phantom{=\;\;} (2 \times 4 \times 6 \times 8 \times 10 \times 12 \times 14 \times 16 \times 18 \times 20) \\
    &amp;amp;= (1 \times 3 \times 5 \times 7 \times 9 \times 11 \times 13 \times 15 \times 17 \times 19) \;\times \\
    &amp;amp;\phantom{=\;\;} (1 \times 2 \times 3 \times 4 \times 5 \times 6 \times 7 \times 8 \times 9 \times 10) \times {\color{red}2^{10}} \\
\end{align}\]

&lt;p&gt;ซึ่งหมายความว่า เราอาจใช้เทคนิคแนว&lt;a href=&quot;//en.wikipedia.org/wiki/Divide-and-conquer_algorithm&quot;&gt;แบ่งแยกและเอาชนะ&lt;/a&gt;ไปคำนวณปัญหาเดียวกันในเคสที่เล็กลง หลังจากนั้นก็เอาผลลัพธ์มาช่วยแก้ปัญหากับเคสที่ใหญ่กว่าได้&lt;/p&gt;

&lt;p&gt;แล้วเราจะหยุดทำไมแค่ตรงนี้หละ? ในเมื่อเราสามารถแตกปัญหาย่อยลงไปได้อีก&lt;/p&gt;

\[\begin{align}
20! &amp;amp;= (1 \times 3 \times 5 \times 7 \times 9 \times 11 \times 13 \times 15 \times 17 \times 19) \;\times \\
    &amp;amp;\phantom{=\;\;} (2 \times 4 \times 6 \times 8 \times 10 \times 12 \times 14 \times 16 \times 18 \times 20) \\
    &amp;amp;= (1 \times 3 \times 5 \times 7 \times 9 \times 11 \times 13 \times 15 \times 17 \times 19) \;\times \\
    &amp;amp;\phantom{=\;\;} (2 \times 6 \times 10 \times 14 \times 18) \;\times \\
    &amp;amp;\phantom{=\;\;} (4 \times 8 \times 12 \times 16 \times 20) \\
    &amp;amp;= (1 \times 3 \times 5 \times 7 \times 9 \times 11 \times 13 \times 15 \times 17 \times 19) \;\times \\
    &amp;amp;\phantom{=\;\;} (2 \times 6 \times 10 \times 14 \times 18) \;\times \\
    &amp;amp;\phantom{=\;\;} (4 \times 12 \times 20) \;\times \\
    &amp;amp;\phantom{=\;\;} (8 \times 16) \\
    &amp;amp;= (1 \times 3 \times 5 \times 7 \times 9 \times 11 \times 13 \times 15 \times 17 \times 19) \;\times \\
    &amp;amp;\phantom{=\;\;} (2 \times 6 \times 10 \times 14 \times 18) \;\times \\
    &amp;amp;\phantom{=\;\;} (4 \times 12 \times 20) \;\times \\
    &amp;amp;\phantom{=\;\;} (8) \;\times \\
    &amp;amp;\phantom{=\;\;} (16) \\
    &amp;amp;= (1 \times 3 \times 5 \times 7 \times 9 \times 11 \times 13 \times 15 \times 17 \times 19) \;\times &amp;amp; {\color{red}1^{10}}\times \\
    &amp;amp;\phantom{=\;\;} (1 \times 3 \times 5 \times 7 \times 9) \;\times &amp;amp; {\color{red}2^{5\phantom0}}\times \\
    &amp;amp;\phantom{=\;\;} (1 \times 3 \times 5) \;\times &amp;amp; {\color{red}4^{3\phantom0}}\times \\
    &amp;amp;\phantom{=\;\;} (1) \;\times &amp;amp; {\color{red}8^{1\phantom0}}\times \\
    &amp;amp;\phantom{=\;\;} (1) \;\times &amp;amp; {\color{red}16^{1\phantom0}}\phantom{\times}
\end{align}\]

&lt;p&gt;หรือก็คือเราสามารถลดรูปปัญหาเป็นการหาผลคูณของเลขจำนวนคี่ในโครงสร้างเช่นนี้แทน แล้วจึงค่อยเอาไปคูณกับเลขคู่ที่จับแยกไว้ … มองผ่านๆ อาจจะเหมือนไม่ได้ช่วยเร่งความเร็วเลย เพราะในส่วนเลขคี่เราก็ยังต้องคูณเป็นจำนวน $n$ ครั้งเท่าเดิม เพิ่มเติมขึ้นมาก็คือต้องเอาไปคูณกับเลขคู่อีกหลายตัวทางด้านขวาเสียอีก&lt;/p&gt;

&lt;p&gt;แต่ระลึกไว้ว่าเราทำงานบนเลขฐานสอง ที่การคูณเลขใดๆ ด้วย $2^k$ นั้นเป็นเพียงการเลื่อนบิตไปทางซ้าย $k$ บิต อนึ่งการคูณเพียงเลขคี่นั้นก็ยังเร็วกว่าการคูณเลขทั้งหมด เพราะผลลัพธ์ระหว่างทางของการคูณเลขคี่นั้นมีขนาดบิตของตัวเลขที่สั้นกว่านั่นเอง ถึงตรงนี้ที่เราคูณเพียงเลขคี่และค่อยๆ เลื่อนบิตก็เร็วกว่าเดิมแล้ว&lt;/p&gt;

&lt;p&gt;แต่มาสังเกตว่าค่า $k$ ก็มีโครงสร้างที่รวบรัดเรียบง่ายเช่นกัน ซึ่งในกรณีนี้คำนวณได้จาก&lt;/p&gt;

\[\begin{align}
k &amp;amp;= \log_2( 1^{10} \times 2^5 \times 4^3 \times 8^1 \times 16^1 ) \\
  &amp;amp;= 0{\times}10 + 1{\times}5 + 2{\times}3 + 3{\times}1 + 4{\times}1 \\
  &amp;amp;= 18
\end{align}\]

&lt;p&gt;หรือเทียบเท่ากับการนับจำนวนบิต &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; ในเลขฐานสองของค่า $n$ ตั้งต้น เรียบร้อยแล้วก็เอา $n$ ไปลบทิ้งนั่นเอง หมายความว่าเราสามารถรู้ได้อย่างเร็วเลยว่าต้องเลื่อนกี่บิต ไม่ต้องค่อยๆ เลื่อนบิตหลายครั้งด้วย&lt;/p&gt;

&lt;p&gt;เรายังทำได้ดีกว่านี้อีก ย้อนกลับไปสังเกตส่วนการคูณเลขคี่ จะเห็นการคูณเลขซ้ำๆ กันเป็นจำนวนมาก เช่นนี้&lt;/p&gt;

\[\begin{align}
20! &amp;amp;= ({\color{lightgray}1 \times 3 \times 5 \times 7 \times 9} \times 11 \times 13 \times 15 \times 17 \times 19) \;\times &amp;amp; {\color{red}1^{10}}\times \\
    &amp;amp;\phantom{=\;\;} ({\color{lightgray}1 \times 3 \times 5} \times 7 \times 9) \;\times &amp;amp; {\color{red}2^{5\phantom0}}\times \\
    &amp;amp;\phantom{=\;\;} ({\color{lightgray}1} \times 3 \times 5) \;\times &amp;amp; {\color{red}4^{3\phantom0}}\times \\
    &amp;amp;\phantom{=\;\;} ({\color{lightgray}1}) \;\times &amp;amp; {\color{red}8^{1\phantom0}}\times \\
    &amp;amp;\phantom{=\;\;} (1) \;\times &amp;amp; {\color{red}16^{1\phantom0}}\phantom{\times} \\
    &amp;amp;= (1)^5 (3 \times 5)^3 (7 \times 9)^2 (11 \times 13 \times 15 \times 17 \times 19)^1 \;\times &amp;amp; {\color{red}2^{18}\phantom{\times}}
\end{align}\]

&lt;p&gt;ซึ่งในส่วนการยกกำลังเราสามารถใช้เทคนิค&lt;a href=&quot;//en.wikipedia.org/wiki/Exponentiation_by_squaring&quot;&gt;การสร้างจัตุรัส&lt;/a&gt; ที่มีรายละเอียดเป็นการเลื่อนบิตของเลขยกกำลังไปทางขวาแทนการหารสองมาช่วยได้อีก จึงทำให้เราประหยัดการคูณ/หาร และเก็บมันไว้ใช้เฉพาะกับการคำนวณตัวเลขในแฟกทอเรียลเท่านั้นได้&lt;/p&gt;

&lt;p&gt;นอกจากนี้ ลำดับการคูณเลขเรียงกันก็มีผล จากตัวอย่าง $11{\times}13{\times}15{\times}17{\times}19$ หากเราคำนวณไล่จากซ้ายไปขวาเรื่อยๆ ซึ่งก็คือ $((((11{\times}13){\times}15){\times}17){\times}19)$ ผลลัพธ์ยิบย่อยระหว่างทางจะมีบิตเพิ่มขึ้นเรื่อยๆ จนมีจำนวนบิตเข้าใกล้จำนวนบิตของผลลัพธ์สุดท้าย แต่หากเราพยายามแบ่งชุดการคูณออกเป็นสองข้างที่มีจำนวนการคูณใกล้เคียงกัน เช่นอาจแบ่งเป็น $((11{\times}13){\times}15){\times}(17{\times}19)$ จะเห็นว่าผลลัพธ์ระหว่างทางนั้นใช้จำนวนบิตเก็บข้อมูลน้อยกว่า โดยน้อยลงเหลือประมาณครึ่งหนึ่งของจำนวนบิตของผลลัพธ์สุดท้ายเท่านั้น&lt;/p&gt;

&lt;p&gt;ดังนั้นสรุปแล้ว อัลกอริทึมนี้จะใช้การคูณลดเหลือ $\frac{n}2$ ครั้งสำหรับการคูณเลขคี่ทุกตัวที่น้อยกว่า $n$ ส่วนการคูณที่แฝงอยู่ในการยกกำลังก็ใช้รวมกันอีกไม่เกิน $\frac{n}2$ ครั้ง แม้ว่ารวมกันแล้วจะกลายเป็นใช้การคูณไม่เกิน $n$ ครั้งเหมือนเดิม แต่ก็เห็นได้ชัดว่ามันทำงานเร็วกว่าด้วยหลายสาเหตุ ตั้งแต่ใช้บิตเก็บข้อมูลเล็กกว่า จำนวนการคูณที่เรียกใช้ก็ไม่มากครั้งกว่า ไปจนถึงการใช้เทคนิคบนเลขฐานสองมาช่วยคำนวณได้อีกหลายจุดอีกด้วย&lt;/p&gt;

&lt;p&gt;อัลกอริทึมใน&lt;a href=&quot;//www.luschny.de/math/factorial/binarysplitfact.html&quot;&gt;แนวคิดนี้&lt;/a&gt;ถูกนำไปใช้งานจริงบน Python 3.2+ (&lt;a href=&quot;//bugs.python.org/issue8692&quot;&gt;กระดานพูดคุยนักพัฒนา&lt;/a&gt;, &lt;a href=&quot;//hg.python.org/cpython/file/7937aa6b7e92/Modules/mathmodule.c#l1218&quot;&gt;โค้ด C บรรทัดที่ 1218-1460&lt;/a&gt;) ซึ่งผู้ใช้ Stack Overflow &lt;a href=&quot;//stackoverflow.com/questions/9815252/&quot;&gt;รายงาน&lt;/a&gt;ว่าฟังก์ชันดังกล่าวเร็วขึ้นประมาณห้าเท่าเมื่อคำนวณ $10000!$ และจะเร็วห่างกันมากยิ่งขึ้นไปอีกเมื่อตัวเลขมีขนาดใหญ่ยิ่งขึ้นกว่านี้ด้วย&lt;/p&gt;

</description>
        <pubDate>Sun, 12 Dec 2021 23:50:50 +0700</pubDate>
        <link>https://neizod.dev/2021/12/12/smarter-better-faster-factorial.html</link>
        <guid isPermaLink="true">https://neizod.dev/2021/12/12/smarter-better-faster-factorial.html</guid>

        <category>Factorial</category>

        <category>Algorithm</category>

        <category>Optimization</category>


      </item>

      <item>
        <title>โปสเตอร์ Mandelbrot</title>
        <description>&lt;p&gt;เรื่องของเรื่องคือสั่ง&lt;a href=&quot;//www.c82.net/euclid/posters/&quot;&gt;โปสเตอร์สุดคูล&lt;/a&gt;ขนาด 3x2 ตารางฟุตจากร้านนึง แล้วก็ไปซื้อกรอบรูปจากอีกร้าน ซึ่งไอ้เจ้าโปสเตอร์ตัวดีดันถูกบริษัทขนส่งเล่นตลกส่งช้าอ้อมโลกไปสามเดือน … ในเมื่อที่บ้านมีกรอบรูปเปล่าๆ ทิ้งไว้ ก็เลยมาลองทำโปสเตอร์ใส่เองดีกว่า มองไปมองมาก็เอา&lt;a href=&quot;//en.wikipedia.org/wiki/Mandelbrot_set&quot;&gt;เซต Mandelbrot&lt;/a&gt; เนี่ยแหละ&lt;/p&gt;

&lt;p&gt;จะติดก็ตรงที่ว่าแม้เซต Mandelbrot จะเป็นอะไรที่ป๊อปมาก (มากซะจนคนนอกสายคณิตศาสตร์ก็น่าจะเคยเห็นผ่านตามาบ้าง) แต่รูปที่มีความละเอียดสูงๆ ระดับสำหรับงานพิมพ์ระดับ A1 นั้นไม่มีเลย (หรือมีแต่เราหาไม่เจอเอง?) และแม้จะมีรูปที่ละเอียดแต่ก็ไม่เห็นแบบที่มีสีสันเหมาะสมกับบรรยากาศในบ้านอยู่ดี เพราะงั้นงานนี้อยากได้ต้องทำเอง 55555 👉 &lt;a href=&quot;//github.com/neizod/poster&quot;&gt;จิ้มโหลดโค้ดโลดดด&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ถึงเราจะเคยเล่นอะไรเกี่ยวกับ fractal มาบ้าง แต่สำหรับเซต Mandelbrot แล้วเรากลับมีความรู้ (ทั้งบนพื้นฐานความจริงและในจินตนาการ) เริ่มต้นที่ศูนย์เลยทีเดียว ก็ต้องขอบคุณ &lt;a href=&quot;//youtu.be/FFftmWSzgmk&quot;&gt;Numberphile&lt;/a&gt; และ &lt;a href=&quot;//youtu.be/9gk_8mQuerg&quot;&gt;Mathologer&lt;/a&gt; ที่อธิบายปูพื้นฐานไว้ได้อย่างละเอียดสุดๆ 👏👏👏&lt;/p&gt;

&lt;h2 id=&quot;สร้างรูปเซต-mandelbrot&quot;&gt;สร้างรูปเซต Mandelbrot&lt;/h2&gt;

&lt;p&gt;โดยเจ้า Mandelbrot นั้นมันเริ่มมาจากสมการสุดเรียบง่ายอย่าง $f_c(z) = z^2+c$ ที่เราจะเอาไปหาลำดับจากการเรียกซ้ำสมการนี้ไปเรื่อยๆ ซึ่งก็คือเอาผลลัพธ์จากรอบก่อนหน้าไปใส่เป็นตัวแปรสำหรับรอบถัดไป หากลำดับที่ได้ไม่ลู่ออกอย่างไร้ขอบเขต ก็ถือว่าค่าคงที่ $c$ ตั้งต้นเป็นสมาชิกของเซตนั่นเอง กล่าวคือถ้าให้&lt;/p&gt;

\[f_c^k(z) = (\overbrace{f_c \circ f_c \circ \cdots \circ f_c}^\text{$k$ times})(z)\]

&lt;p&gt;สนใจค่าคงที่ $c$ ใดๆ และเริ่มต้นตั้งค่า $z=0$ เราอยากรู้ว่าลำดับนี้ลู่ออกอย่างไร้ขอบเขตหรือไม่&lt;/p&gt;

\[f_c(0),\quad
f_c^2(0),\quad
f_c^3(0),\quad
\cdots,\quad
f_c^\infty(0),\quad
\cdots\]

&lt;p&gt;โดยเรานับว่าการลู่ออกมีอยู่เพียงวิธีเดียว คือ $\abs{f_c^\infty(0)} = \infty$ เท่านั้น สำหรับลำดับบางแบบที่ค่าไม่ได้ลู่เข้าไปหยุดนิ่งอยู่ที่ค่าใดค่าหนึ่ง (ตามที่เราคุ้นเคย) แต่เด้งไปมาเป็นคาบระหว่างค่าต่างๆ (เช่นที่ $c={-}1$ จะได้ว่าสมาชิกในลำดับวิ่งสลับกันไปมาเป็นคาบความยาวสองระหว่างค่า $0$ และ $-1$) จะไม่ถือว่าลู่ออกแต่อย่างใด&lt;/p&gt;

&lt;p&gt;เห็นได้ไม่ยากว่า สำหรับจำนวนจริง $c$ ใดๆ ช่วงที่ไม่ลู่ออกคือช่วงปิดจาก $-2$ ถึง $+\frac14$ แล้วเราจะสนใจแค่จำนวนจริงทำไมหละ ถ้ายอมให้ $c$ เป็นจำนวนเชิงซ้อน เราจะได้เซต Mandelbrot อย่างที่คุ้นเคยกันดีนั่นเอง&lt;/p&gt;

&lt;blockquote class=&quot;oversized figure&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/images/math/mandelbrot.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;เซต Mandelbrot (สีขาว) ในพิกัดเชิงซ้อนตั้งแต่ $(-\frac{10}4,+\frac54i)$ ที่มุมซ้ายบน ไปจนถึง $(+\frac54,-\frac54i)$ ที่มุมขวาล่าง&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;แต่หากระบายสีแบ่งแค่ระหว่างสมาชิกในเซตกับนอกเซตก็คงธรรมดาไป วิธีหนึ่งที่น่าสนใจและแพร่หลายก็คือการระบายสีค่า $c$ ที่เมื่อนำไปผ่านฟังก์ชัน $f_c^k(0)$ แล้วลู่ออก โดยเลือกสีตามลำดับความเร็วว่าต้องทดสอบจุดนั้นด้วยการเอาไปผ่านฟังก์ชัน $f_c$ กี่ $k$ รอบจึงจะมั่นใจได้ว่าลำดับมันจะลู่ออกจริงๆ ซึ่ง threshold ยอดนิยมที่ผ่านการพิสูจน์มาแล้วก็คือ $\abs{f_c^k(0)} &amp;gt; 2$ จะทำให้ลำดับลู่ออกแน่นอน ใช้ความรู้นี้ประกอบกับการเขียนโปรแกรมอีกเล็กน้อยก็ทำให้ได้ผลลัพธ์เป็นรูปสวยๆ (?) ตามข้างต้นแล้ว 😊&lt;/p&gt;

&lt;h2 id=&quot;เร่งความเร็วกับการทดสอบหัวใจสำคัญ&quot;&gt;เร่งความเร็วกับการทดสอบหัวใจสำคัญ&lt;/h2&gt;

&lt;p&gt;อย่างไรก็ตามโปรแกรมที่ได้นั้นคำนวณช้ามากกกกกก (รันทิ้งไว้เป็นชั่วโมง) ซึ่งก็ไม่น่าแปลกใจเพราะมีหลายจุดที่ไม่ยอมลู่ออกเสียที จึงต้องนำมันไปผ่านฟังก์ชัน $f_c$ เพื่อทดสอบซ้ำเรื่อยๆ (จนกว่าจะถึงลิมิตความเหนื่อยว่าไม่อยากทดสอบจุดนั้นแล้ว) ดังนั้นถ้าเราสามารถหาคำตอบได้อย่างรวดเร็วเลยว่าจุดที่สนใจจุดนั้นอยู่ในเซต Mandelbrot หรือไม่ เพื่อให้เราข้ามการวนรอบทดสอบการลู่ออกไปเลยก็คงดีไม่น้อย&lt;/p&gt;

&lt;p&gt;ซึ่งบริเวณที่ใหญ่ที่สุดในเซต ก็คือส่วนที่เรียกว่าหัวใจสำคัญ (main cardioid – แปลออกมาแล้วเท่ดี 5555) ที่ถ้าใครเคยพล็อตฟังก์ชันตรีโกณมิติในระนาบเชิงขั้วก็คงบอกได้ทันทีว่ามันเป็น&lt;a href=&quot;//en.wikipedia.org/wiki/Cardioid&quot;&gt;พล็อตรูปหัวใจ&lt;/a&gt;ที่มีหน้าตาคล้าย $r=1-\cos\theta$ แต่เราจะแก้สมการนี้ในระนาบเชิงซ้อนได้อย่างไรหละ?&lt;/p&gt;

&lt;p&gt;หากเราไล่ติดตามผลลัพธ์ต่างๆ ในบางลำดับ จะพบว่ามีบางค่า $c$ ที่ให้ผลลัพธ์ $f_c^\infty(0)$ ลู่เข้าไปหยุดที่จุดเพียงจุดเดียว เราเรียกจุดนั้นว่าจุดตรึง (fixed point) หากให้ $z_\ast$ เป็นจุดตรึงนั้น จะได้ว่า $f_c^\infty(0) = z_\ast = f_c(z_\ast)$ นั่นเอง และเมื่อแทนค่าตามนิยาม $f_c$ กลับมาก็จะได้ว่า&lt;/p&gt;

\[0 = z_\ast^2 - z_\ast + c\]

&lt;p&gt;ถึงตอนนี้ก็ง่ายแล้ว เพราะแค่ใช้&lt;a href=&quot;//en.wikipedia.org/wiki/Quadratic_formula&quot;&gt;สูตรสุดน่าเกลียด&lt;/a&gt; $-b\pm\sqrt{blah}$ ที่เรารู้จักกันไม่ดีมาตั้งแต่ม.ต้น เพื่อแก้สมการเชิงซ้อนนี้ได้เลย ซึ่งจะทำให้ได้ผลลัพธ์ว่า&lt;/p&gt;

\[z_\ast = \frac{1 \pm \sqrt{1-4c}}{2}\]

&lt;p&gt;แต่นี่ยังเป็นแค่ครึ่งทางการคำนวณ เพราะสิ่งที่เราต้องการหาจริงๆ คือค่า $c$ ที่สอดคล้องกับเงื่อนไขบางอย่าง ที่ทำให้หาจุดตรึง $z_\ast$ เหล่านั้นได้ต่างหาก โดยการคำนวณอีกส่วนที่เราจะสนใจคือพฤติกรรมของจุดเพื่อนบ้านละแวกใกล้กับ $z_\ast$ ที่หากนำบรรดาเพื่อนบ้านไปผ่าน $f_c$ แล้วเพื่อนบ้านยังขยับเข้าหา $z_\ast$ เรื่อยๆ เราจะเรียก $z_\ast$ เช่นนี้ว่าเป็นจุดตรึงดึงดูด (attracting fixed point) และเราสามารถเช็คว่าจุดนั้นๆ มีคุณสมบัติดังกล่าวหรือไม่ผ่านการหาค่าความจริงจากอสมการอนุพันธ์ $\abs{f_c’(z_\ast)}&amp;lt;1$ ได้ทันที ดังนั้นเราจึงได้อสมการเงื่อนไขคือ&lt;/p&gt;

\[\abs{f_c'(z_\ast)} = \abs{2z_\ast} &amp;lt; 1\]

&lt;p&gt;ซึ่งก็คือ สำหรับค่า $c$ ใดๆ เราเพียงแค่ทดสอบว่า&lt;/p&gt;

\[\abs{1\pm\sqrt{1-4c}} &amp;lt; 1\]

&lt;p&gt;หรือไม่ หากอสมการนี้เป็นจริงก็แปลว่าค่า $c$ นั้นไม่มีวันลู่ออก และมีผลลัพธ์เป็นสมการรูปหัวใจนั่นเอง ❤️&lt;/p&gt;

&lt;h2 id=&quot;แล้วกลุ่มก้อนอื่นๆ-หละ&quot;&gt;แล้วกลุ่มก้อนอื่นๆ หละ?&lt;/h2&gt;

&lt;p&gt;สังเกตว่าอสมการทดสอบหัวใจสำคัญนั้นยืนยันได้แค่การเป็นสมาชิกเซต สำหรับจุดอื่นๆ ที่ทดสอบแล้วไม่ถูกต้องตามอสมการ จุดนั้นอาจไม่จำเป็นต้องลู่ออกก็ได้ แต่มันอาจกระโดดไปมาเป็นคาบ เช่นที่เราเห็นกันไปแล้วว่า $c=-1$ จะให้คาบความยาวสอง คำถามคือเรายังสามารถเช็คค่าพวกนี้ได้อยู่หรือไม่?&lt;/p&gt;

&lt;p&gt;สมมติสนใจลำดับไม่ลู่ออกที่มีคาบความยาวสอง เราอาจจะมองว่ามันเป็นจุดตรึงก็ได้ เพียงแต่ต้องเปลี่ยนไปมองมันบนฟังก์ชันตัวใหม่ สมมติสนใจเฉพาะจุดตรึง $f_c^\infty(0)=z_*$ ดังนั้น $z_\ast = f_c^2(z_\ast)$ หรือก็คือ&lt;/p&gt;

\[\begin{align}
z_\ast &amp;amp;= (f_c \circ f_c)(z_\ast) \\
       &amp;amp;= (z_\ast^2 + c)^2 + c \\
       &amp;amp;= z_\ast^4 + 2cz_\ast^2 + c^2 + c
\end{align}\]

&lt;p&gt;กลายเป็นว่าเราต้องแก้สมการกำลังสี่เพื่อหา $z_\ast$ อย่างนั้นหรือ? เปล่าเลย! เพราะยังไงซะเราก็สนใจ $c$ เป็นหลักอยู่แล้ว ดังนั้นจัดรูปเป็น&lt;/p&gt;

\[0 = c^2 + (2z_\ast^2+1)c + (z_\ast^4-z_\ast)\]

&lt;p&gt;โชคดีที่สมการนี้จับพจน์กำลังสี่มาตัดกันทิ้งได้หมด ดังนี้&lt;/p&gt;

\[\begin{align}
c &amp;amp;= \frac{-(2z_\ast^2+1) \pm \sqrt{(2z_\ast^2+1)^2 - 4(z_\ast^4-z_\ast)}}2 \\
  &amp;amp;= \frac{-(2z_\ast^2+1) \pm \sqrt{4z_\ast^2 + 4z_\ast + 1}}2 \\
  &amp;amp;= \frac{-(2z_\ast^2+1) \pm (2z_\ast + 1)}2 \\
  &amp;amp;= (z_\ast - z_\ast^2)  \quad\quad\text{or}\quad\quad  (- z_\ast^2 - z_\ast - 1)
\end{align}\]

&lt;p&gt;สังเกตว่าเราเคยแก้กรณี $c=z_\ast-z_\ast^2$ ไปแล้วในหัวใจหลัก ซึ่งก็ไม่ถือว่าแปลกอะไรที่สมการข้างต้นจะให้คำตอบนี้ซ้ำกลับมาด้วย เพราะคาบความยาวสองนั้นย่อมสามารถสร้างได้จากการนำคาบความยาวหนึ่งมาวนซ้ำสองครั้งนั่นเอง&lt;/p&gt;

&lt;p&gt;ดังนั้นสนใจเฉพาะ $c=-z_\ast^2-z_\ast-1$ ซึ่งให้คำตอบเป็นคาบความยาวเท่ากับสองพอดีเพียงอย่างเดียว เช่นเดิมเราสนใจอสมการอนุพันธ์ $\abs{(f_c{\circ}f_c)’(z_\ast)} = \abs{4z_\ast^3+4cz_\ast} &amp;lt; 1$ ตรงนี้จะทริกกี้หน่อยเพราะเราจะเริ่มโดยการแทนค่า $c$ ลงไปก่อน&lt;/p&gt;

\[\begin{align}
4\abs{z_\ast(z_\ast^2 + c)}
  &amp;amp;= 4\abs{z_\ast(z_\ast^2 - z_\ast^2 - z_\ast - 1)} \\
  &amp;amp;= 4\abs{z_\ast(z_\ast+1)} \\
  &amp;amp;= 4\abs{z_\ast^2 + z_\ast} \\
  &amp;amp;&amp;lt; 1
\end{align}\]

&lt;p&gt;แล้วจึงนำ $\abs{z_\ast^2+z_\ast}$ แทนค่ากลับลงไปที่ $c=-z_\ast^2-z_\ast-1$ ซึ่งทำให้ได้&lt;/p&gt;

\[\abs{1+c} &amp;lt; \frac14\]

&lt;p&gt;หรือก็คือได้วงกลมรัศมี $\frac14$ ที่มีจุดโฟกัสอยู่ที่ $(-1,0i)$ ที่เราเรียกว่าดิสก์สำคัญ (main disk) นั่นเอง 💫&lt;/p&gt;

&lt;p&gt;ส่วนกลุ่มอื่นๆ ที่มีคาบยาวกว่านี้ … น่าจะแก้สมการยากน่าดู 😂😂😂😂😂&lt;/p&gt;

&lt;h2 id=&quot;อ้างอิง&quot;&gt;อ้างอิง&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://cosinekitty.com/mandel_orbits_analysis.html&quot;&gt;http://cosinekitty.com/mandel_orbits_analysis.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://math.stackexchange.com/questions/3986980&quot;&gt;https://math.stackexchange.com/questions/3986980&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://math.stackexchange.com/questions/1341171&quot;&gt;https://math.stackexchange.com/questions/1341171&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 19 Nov 2021 23:20:31 +0700</pubDate>
        <link>https://neizod.dev/2021/11/19/mandelbrot-poster.html</link>
        <guid isPermaLink="true">https://neizod.dev/2021/11/19/mandelbrot-poster.html</guid>

        <category>Fractal</category>

        <category>Mathematics</category>

        <category>Complex Number</category>


      </item>

      <item>
        <title>Pokémon Unite</title>
        <description>&lt;p&gt;จริงๆ อยากบันทึกเกี่ยวกับเกมแนว &lt;a href=&quot;//en.wikipedia.org/wiki/Multiplayer_online_battle_arena&quot;&gt;MOBA&lt;/a&gt; มาตั้งแต่ช่วงต้นปี 2018 ที่เพื่อนในแลป (และแลปข้างๆ) มาชวนเล่น &lt;a href=&quot;//en.wikipedia.org/wiki/Dota_2&quot;&gt;Dota 2&lt;/a&gt; กันแล้ว แต่ว่าตอนนั้นประสบการณ์ไม่ค่อยดีเท่าไหร่ เพราะในทีมมีคนนึงที่จริงจังจนหัวร้อน เลยเล่นไปได้แค่แปปเดียวก็เลิก (ซึ่งจริงๆ ก็อาจจะต้องนับย้อนรวมตั้งแต่กว่าสิบปีก่อนด้วย ที่ได้ลองเล่น &lt;a href=&quot;//en.wikipedia.org/wiki/Defense_of_the_Ancients&quot;&gt;Dota ต้นฉบับ&lt;/a&gt;ดูตามสมัยนิยมในร้านเกมแถวโรงเรียน ซึ่งเพื่อนที่ชวนเล่นเป็นฝั่งตรงข้ามก็ไม่สอนอะไรเลย แถมยังไล่ต้อนจนทำอะไรไม่ได้อีก เลยรู้สึกว่า เอ่อ … ถ้าแม่งอยากจะชนะขนาดนั้นก็เล่นไปคนเดียวเลยเหอะ)&lt;/p&gt;

&lt;blockquote class=&quot;figure&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/images/game/pokemon-unite/trainer-with-kabigon.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;โปเกมอนเทรนเนอร์ (ซ้าย) และเรา (ขวา) 🤪&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;พอมาถึงปี 2021 ที่ประสบการณ์เก่าๆ ไม่ค่อยกวนใจแล้ว เลยได้ฤกษ์ลองเริ่มทำความรู้จักกับเกมแนว MOBA ใหม่อีกครั้ง กับ &lt;a href=&quot;//en.wikipedia.org/wiki/Pok%C3%A9mon_Unite&quot;&gt;Pokémon Unite&lt;/a&gt; ที่ให้จัดทีมโปเกมอนฝั่งละ 5 ตัวมาดังค์บอลแข่งกันในเวลาจำกัด 10 นาที แนวคิดของเกมจึงไม่ได้เน้นกดคอมโบสกิลไล่ตีอีกฝั่งเป็นหลักเท่าไหร่ แต่เป็นการวางแผนทำแต้มเสียมากกว่า (โอเคว่าเราอาจจะเล่นตัวง่ายที่ไม่ต้องคิดเรื่องสกิลหรือการไล่ตีอีกฝ่ายเท่าไหร่ก็ได้ 5555555)&lt;/p&gt;

&lt;p&gt;ส่วนที่ทำให้รู้สึกว่าเกมมันเข้าใจง่าย ก็คงเป็นเพราะเกมมันยังเพิ่งเปิด ยังไม่มีโปเกมอนให้เลือกเล่นมากนัก เลยทำให้เราพอจะมีเวลาทำความรู้จักแต่ละตัวได้ นอกจากนี้เกมยังไม่มีระบบไอเทมสุดซับซ้อนให้คิดระหว่างแมทช์ แต่เป็นระบบไอเทมนอกแมทช์ที่ให้ใช้เวลาคำนวณได้เต็มที่ไปเลย&lt;/p&gt;

&lt;blockquote class=&quot;figure&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/images/game/pokemon-unite/weekly-gang.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;ทีมเทรนเนอร์ที่นัดเล่นกันสัปดาห์ละครั้ง&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;แต่ที่ทำให้รู้สึกว่าเกมสนุกสุดๆ ก็คือกลุ่มเพื่อนที่เล่นด้วยกัน ที่คราวนี้ไม่ใช่กลุ่มเดิมที่จริงจังกับเกมจนแทบจะแดกหัวกันถ้ามีใครซักคนเล่นพลาดไปเพียงนิดเดียวแล้ว กลับเป็นเหล่าผู้รักโปเกมอนที่อยากเห็นน้องๆ สุดน่ารักที่ตัวที่ชอบ ได้ออกไปโลดแล่นในเกมกีฬาให้เหล่าโค้ชได้มาใช้เวลาวางแผนร่วมกัน แม้สุดท้ายจะแพ้บ้างชนะบ้างก็ไม่เป็นไรเนี่ยแหละ&lt;/p&gt;

</description>
        <pubDate>Sun, 31 Oct 2021 23:39:19 +0700</pubDate>
        <link>https://neizod.dev/2021/10/31/pokemon-unite.html</link>
        <guid isPermaLink="true">https://neizod.dev/2021/10/31/pokemon-unite.html</guid>

        <category>Pokemon</category>

        <category>Game</category>

        <category>Moba</category>


      </item>

      <item>
        <title>ตัวเลข Stirling ประเภทที่หนึ่ง: เก็บไพ่ค่าสูงสุดที่เคยเห็นขึ้นมือเรื่อยๆ ได้กี่แบบ</title>
        <description>&lt;p&gt;เจอโจทย์ความน่าจะเป็นที่เคลมว่าง่ายระดับม.ต้น แต่คนแปลโจทย์ดันแปลผิดไปนิดนึง เลยทำให้โจทย์กลายเป็นยากระดับมหา’ลัยไปซะได้ 😂 โดยเนื้อหาโจทย์เวอร์ชันต้นฉบับ (ที่พิมพ์ผิด) คือ “สับไพ่หนึ่งดอกแล้วค่อยๆ เปิดทีละใบ หากเปิดเจอใบที่มีค่าสูงที่สุดเท่าที่เคยเห็นก็จะเก็บไพ่ใบนั้นขึ้นมือ หาความน่าจะเป็นเมื่อเปิดไพ่ครบ $n=13$ ใบแล้วจะมีไพ่ขึ้นมือ&lt;strong&gt;&lt;em&gt;ทั้งหมด&lt;/em&gt;&lt;/strong&gt; $r$ ใบว่าเป็นเท่าไหร่” — ซึ่งจริงๆ แล้วโจทย์ที่พิมพ์ถูกควรจะถามหาแค่โอกาสที่จะเก็บไพ่&lt;strong&gt;&lt;em&gt;หมายเลข&lt;/em&gt;&lt;/strong&gt; $r$ ขึ้นมือเท่านั้น (ให้ค่า $r$ ของไพ่ $A=1$ ไล่ขึ้นไปยัง $K=13$)&lt;/p&gt;

&lt;blockquote class=&quot;oversized figure&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;/images/math/take-higest-cards.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;ตัวอย่างการเก็บไพ่ขึ้นมือ เมื่อเปิดเจอ $364JX78K25QA9$ ตามลำดับ จะเก็บได้ 4 ใบคือ $36JK$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;งั้นก็มาลองแก้โจทย์เวอร์ชันที่พิมพ์ถูก (โจทย์ง่ายๆ) กันก่อน ว่าเมื่อเปิดไพ่ครบแล้วเราจะมีไพ่หมายเลข $r$ อยู่บนมือด้วยความน่าจะเป็นเท่าไหร่? มองผ่านๆ อาจรู้สึกว่าโจทย์นี้ก็ยังยากเพราะวิธีสับไพ่นั้นสูงถึง $13!$ แต่ถ้าลองพิจารณาจากกรณีสุดขอบเข้ามา ซึ่งในที่นี้จะเริ่มจากสนใจ $K$ จะเห็นว่ายังไงไพ่ใบนี้ก็ต้องถูกหยิบขึ้นมืออย่างแน่นอนไม่ว่าจะปรากฏตอนไหนในลำดับ เพราะว่ามันมีค่าสูงที่สุดไม่มีไพ่ใบไหนมาบังมันได้นั่นเอง&lt;/p&gt;

&lt;p&gt;ต่อมาเราจะถอยกลับไปพิจารณาไพ่ $Q$ ซึ่งสามารถลดรูปปัญหาได้ว่า เราจะเจอไพ่ $Q$ ก่อนหรือหลัง $K$ (โดยที่ไม่ต้องสนใจไพ่อื่นๆ ที่มีค่าต่ำกว่ามันเลย) ดังนั้น $Q$ ก็จะถูกหยิบด้วยความน่าจะเป็นเพียงแค่ครึ่งหนึ่งเท่านั้น และถอยกลับไปพิจารณาไพ่ $J$ ได้ในทำนองเดียวกัน ที่เราจะสนเพียงแค่ว่ามันต้องปรากฏก่อน $QK$ จึงทำให้ $J$ มีความน่าจะเป็นหนึ่งในสามที่จะถูกเก็บขึ้นมือ&lt;/p&gt;

&lt;p&gt;ไล่ตามแนวคิดนี้ไปเรื่อยๆ จึงสรุปได้ว่าไพ่ใบที่มีค่า $r$ จะถูกหยิบด้วยความน่าจะเป็น $\frac1{1+n-r}$ เพราะต้องหลบไพ่ใบอื่นๆ ที่มีค่ามากกว่ามันเป็นจำนวน $n-r$ ใบเพื่อมาปรากฏก่อนนั่นเอง&lt;/p&gt;

&lt;p&gt;ผลพลอยได้ก็คือค่าคาดหวังของจำนวนไพ่บนมือ ซึ่งคำนวณได้ว่าคือ $1+\frac12+\frac13+\cdots+\frac1{13} \approx 3.18$ ใบ&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;งั้นกลับไปที่คำถามเวอร์ชันพิมพ์ผิด ว่าความน่าจะเป็นของการเก็บไพ่บนมือได้ $r$ ใบหลังไล่เปิดไพ่จนหมดกองเป็นเท่าไหร่? เราจะเริ่มอธิบายมันผ่านความสัมพันธ์เวียนเกิด $s$ ที่จะนับวิธีที่แตกต่างกันที่จะหยิบไพ่จำนวน $r$ ใบพอดีขึ้นมือ เมื่อเริ่มจากกองไพ่ขนาด $n$ ใบ&lt;/p&gt;

\[\begin{align}
s(0,0) &amp;amp;= 1 \\
s(n,r) &amp;amp;= \underbrace{s(n-1,r-1)}_\text{CREATE}

        + \underbrace{(n-1)\,s(n-1,r)}_\text{APPEND} \\
\end{align}\]

&lt;p&gt;โดยแต่ละพจน์ที่เรียกการเวียนเกิด มีรายละเอียดดังนี้&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;CREATE&lt;/strong&gt;: จาก $s(n-1,r-1)$ ที่บอกว่าเคยเปิดไพ่ $n-1$ ใบและหยิบขึ้นมือแล้ว $r-1$ ใบ ดังนั้นไพ่ใบใหม่จะต้องถูกหยิบขึ้นมือเท่านั้นเพื่อรับประกันว่าตอนจบจะมีไพ่ $r$ ใบตามต้องการ ซึ่งก็ทำได้แค่วิธีเดียวคือไพ่ใบสุดท้ายที่เปิดนี้จะต้องมีค่าสูงกว่าไพ่ทุกใบที่เคยเห็นมาทั้งหมด&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;APPEND&lt;/strong&gt;: จาก $s(n-1,r)$ ที่บอกว่าเคยเปิดไพ่ $n-1$ ใบแต่หยิบขึ้นมือมาครบแล้ว $r$ ใบ นั่นทำให้ไพ่ใบใหม่ที่เปิดต้องมีค่าน้อยกว่าใบที่มีค่าสูงที่สุดที่เคยเห็นมา เนื่องจากเรามีไพ่ทั้งหมด $n$ ใบ (อย่าลืมรวมใบที่กำลังจะเปิดด้วย) แต่ไพ่ที่มีค่าสูงสุดมีอยู่เพียงแค่ใบเดียว ดังนั้นไพ่ใบสุดท้ายนี้จึงมีวิธีหยิบแตกต่างกันได้ถึง $(n-1)$ แบบเลยทีเดียว&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;หน้าตาสมการเวียนเกิดดู&lt;a href=&quot;/2016/05/09/stirling-2nd.html&quot;&gt;คุ้นๆ&lt;/a&gt; … ซึ่งถ้าใครคลุกคลีกับเรื่องการนับ ก็คงจะบอกได้ทันทีว่านี่มันคือ&lt;a href=&quot;//en.wikipedia.org/wiki/Stirling_numbers_of_the_first_kind&quot;&gt;ตัวเลข Stirling ประเภทที่หนึ่ง&lt;/a&gt;อย่างไม่มีผิดเพี้ยนเลยนั่นเอง!&lt;/p&gt;

&lt;p&gt;แต่คำอธิบายมาตฐานของตัวเลข Stirling ประเภทที่หนึ่งนั้นกล่าวว่ามันคือจำนวนวิธีสลับของ $n$ ชิ้นให้ได้ $r$ &lt;a href=&quot;//en.wikipedia.org/wiki/Cycles_and_fixed_points&quot;&gt;วัฏจักร&lt;/a&gt; … แล้วมันมาเกี่ยวอะไรกับการหยิบไพ่ขึ้นมือตามกฏนี้หละ???&lt;/p&gt;

&lt;p&gt;จริงๆ ถ้าเรามองลำดับการหยิบไพ่เป็นการนิยามวัฏจักรของการสับเปลี่ยน โดยเริ่มวัฏจักรใหม่เมื่อเจอไพ่ใบต้องหยิบขึ้นมือ (และเพิ่มไพ่ลงในวัฏจักรล่าสุดที่มีเมื่อไม่หยิบไพ่ขึ้นมือ) เช่น จากตัวอย่างในรูปเมื่อต้นบทความ เราอาจเปลี่ยนไปเขียนมันในรูปกลุ่มวัฏจักรสับเปลี่ยนได้ว่า&lt;/p&gt;

\[\pi = (3)(64)(JX78)(K25QA9)\]

&lt;p&gt;จะเห็นได้ชัดว่ากฏการหยิบไพ่เช่นนี้มีค่าเทียบเท่าได้กับตัวเลข Stirling ประเภทที่หนึ่งนั่นเอง&lt;/p&gt;

&lt;p&gt;และจาก $\sum_{r=0}^n s(n,r) = n!$ จึงทำให้ได้ความน่าจะเป็นของการหยิบไพ่ได้ $r$ ใบคือ $s(n,r)/n!$&lt;/p&gt;

</description>
        <pubDate>Wed, 27 Oct 2021 17:55:55 +0700</pubDate>
        <link>https://neizod.dev/2021/10/27/stirling-1st-take-higest-cards.html</link>
        <guid isPermaLink="true">https://neizod.dev/2021/10/27/stirling-1st-take-higest-cards.html</guid>

        <category>Mathematics</category>

        <category>Combinatorics</category>

        <category>Recursion</category>


      </item>

      <item>
        <title>Coffee → Code</title>
        <description>&lt;p&gt;Hacktoberfest วนกลับมาอีกทั้งที ก็ได้เวลาเขียนโปรแกรมเพื่อค้ำจุนโลก opensource อีกซักครั้ง ขอประเดิมปีนี้ด้วย repo สำหรับโค้ดสนุกๆ จาก &lt;a href=&quot;//twitter.com/narze&quot;&gt;@narze&lt;/a&gt; ที่แค่ให้&lt;a href=&quot;//github.com/narze/coffee-to-code/&quot;&gt;แปลงคำว่า Coffee ไปเป็นคำว่า Code&lt;/a&gt; ซึ่งก็ดูไม่ได้เกินจริงซักเท่าไหร่สำหรับโปรแกรมเมอร์อย่างเราๆ 😂&lt;/p&gt;

&lt;p&gt;แต่จะทำยังไงให้มัน “สนุก” หละ? คิดว่าถ้าใช้ภาษา mainstream ที่ใช้ในชีวิตประจำวันมาเป็นสิบปีอยู่แล้ว (อย่าง Python, C++) มันก็คงไม่สนุกสำหรับเราอีกต่อไป เลยนึกย้อนไปถึงช่วงที่ Google Code Jam ยอมให้เขียนโค้ดภาษาใดก็ได้ ก็จำได้ว่าติดใจ Brainfuck เหลือเกิน (ถึงแม้จะ&lt;a href=&quot;/2016/04/10/code-jam-2016-qualification.html&quot;&gt;เคยใช้แค่ครั้งเดียว&lt;/a&gt;ก็เถอะ) 5555555 เพราะงั้นเอามันมาเขียนอีกรอบดีกว่า&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PART 1 INIT THE WORD COFFEE
===========================
++++ ++++ ++++ ++++     work with hexadecimal
[                       this loop will init 6 chars closest to coffee
  &amp;gt; ++++                add 2 plus in this line to lower 1st char
  &amp;gt; ++++ +++            or delete 2 plus onward to upper all chars
  &amp;gt; ++++ ++
  &amp;gt; ++++ ++
  &amp;gt; ++++ ++
  &amp;gt; ++++ ++
&amp;lt;&amp;lt;&amp;lt;&amp;lt; &amp;lt;&amp;lt; - ]             condition to exit the dowhile loop
&amp;gt; +++                   adjust a to c
&amp;gt; -                     adjust p to o
&amp;gt; ++++ ++               you
&amp;gt; ++++ ++               get
&amp;gt; ++++ +                the
&amp;gt; ++++ +                idea
[&amp;lt;]                     reset head
&amp;gt;[.&amp;gt;]&amp;lt;[&amp;lt;]               print the initial word / this line can be omitted


PART 2 CONVERT COFFEE TO CODE
=============================
&amp;gt;                       skip the c
&amp;gt;                       skip the o
&amp;gt; --                    change 1st f to d
&amp;gt; [-]                   remove 2nd f
&amp;gt; [-]                   remove 1st e
&amp;gt; [-&amp;lt;&amp;lt;+&amp;gt;&amp;gt;]              move 2nd e to the back of previous d
&amp;lt;&amp;lt;[&amp;lt;]                   reset head
&amp;gt;[.&amp;gt;]&amp;lt;[&amp;lt;]               print the final word after conversion
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ไปลองไล่การทำงานของมันได้ที่ &lt;a href=&quot;//fatiherikli.github.io/brainfuck-visualizer/#KysrKyArKysrICsrKysgKysrKwpbCiAgPiArKysrCiAgPiArKysrICsrKwogID4gKysrKyArKwogID4gKysrKyArKwogID4gKysrKyArKwogID4gKysrKyArKwo8PDw8IDw8IC0gXQo+ICsrKwo+IC0KPiArKysrICsrCj4gKysrKyArKwo+ICsrKysgKwo+ICsrKysgKwpbPF0KPlsuPl08WzxdCgoKPgo+Cj4gLS0KPiBbLV0KPiBbLV0KPiBbLTw8Kz4+XQo8PFs8XQo+Wy4+XTxbPF0=&quot;&gt;fatiheriki.github.io/brainfuck-visualizer&lt;/a&gt; ได้เลย&lt;/p&gt;

</description>
        <pubDate>Sat, 02 Oct 2021 21:39:44 +0700</pubDate>
        <link>https://neizod.dev/2021/10/02/convert-coffee-to-code.html</link>
        <guid isPermaLink="true">https://neizod.dev/2021/10/02/convert-coffee-to-code.html</guid>

        <category>Brainfuck</category>


      </item>

      <item>
        <title>$\gcd(a,b)=c \iff \gcd(da,db)=dc$</title>
        <description>\[dc = {\color{red}d} \gcd({\color{green}a},{\color{blue}b})
   = \left( \prod_{p \in \mathbb{P}} p^{\color{red}\delta_p} \right)
     \left( \prod_{p \in \mathbb{P}} p^{\min({\color{green}\alpha_p},{\color{blue}\beta_p})} \right)
   = \prod_{p \in \mathbb{P}} p^{\min({\color{red}\delta_p}+{\color{green}\alpha_p},
                                      {\color{red}\delta_p}+{\color{blue}\beta_p})}
   = \gcd({\color{red}d}{\color{green}a},{\color{red}d}{\color{blue}b})\]
</description>
        <pubDate>Fri, 01 Oct 2021 17:02:11 +0700</pubDate>
        <link>https://neizod.dev/2021/10/01/unwrapping-gcd.html</link>
        <guid isPermaLink="true">https://neizod.dev/2021/10/01/unwrapping-gcd.html</guid>

        <category>Mathematics</category>

        <category>Number Theory</category>

        <category>One-Liner</category>


      </item>

      <item>
        <title>อยากซื้อคอม</title>
        <description>&lt;blockquote class=&quot;convo left&quot;&gt;
  &lt;p&gt;อยากซื้อคอมใหม่&lt;/p&gt;

  &lt;p&gt;ทำไมช่วงนี้ราคาต้องขึ้นด้วย&lt;/p&gt;

  &lt;p&gt;มมต.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;convo right&quot;&gt;
  &lt;p&gt;แม่มึงตาย?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;convo left&quot;&gt;
  &lt;p&gt;ไม่ใช่โว้ยยยย มมต. ไม่มีตังค์ค์ค์ค์&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Thu, 23 Sep 2021 22:33:44 +0700</pubDate>
        <link>https://neizod.dev/2021/09/23/wanna-buy-new-computer.html</link>
        <guid isPermaLink="true">https://neizod.dev/2021/09/23/wanna-buy-new-computer.html</guid>

        <category>Humor</category>

        <category>Conversation</category>


      </item>

  </channel>
</rss>
